name: Release
on:
  push:
    tags:
      - "v*.*.*"

env:
  BIN_NAME: tyr
  PROJECT_NAME: tyr
  REPO_NAME: jkitsao/tyr
  BREW_TAP: kitsao/tyr

jobs:
  dist:
    name: Build and Publish Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-latest, windows-2022]
        arch: [x86_64, aarch64]
        rust: [stable]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.os }}-${{ matrix.arch }}-unknown-linux-gnu
          override: true

      - name: Build and Test Binary
        run: cargo test --release --locked --target ${{ matrix.os }}-${{ matrix.arch }}-unknown-linux-gnu

      - name: Build Release Binary
        run: cargo build --release --locked --target ${{ matrix.os }}-${{ matrix.arch }}-unknown-linux-gnu

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Publish Binaries to NPM
        run: |
          cd npm
          bin="tyr"
          node_os=$(echo "${{ matrix.os }}" | cut -d '-' -f1)
          node_arch=$(echo "${{ matrix.arch }}" | cut -d '-' -f1)
          node_pkg="${bin}-${node_os}-${node_arch}"
          mkdir -p "${node_pkg}/bin"
          cp "../target/${{ matrix.os }}-${{ matrix.arch }}/release/${bin}" "${node_pkg}/bin"
          cd "${node_pkg}"
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-npm-base:
    name: Publish Base NPM Package
    needs: dist
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Install Dependencies
        run: cd npm/app && yarn install && yarn build

      - name: Publish Package to NPM
        run: cd npm/app && npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

        # - name: Publish to NPM and Rubygems
        #  env:
        #   NPM_API_KEY: ${{ secrets.NPM_API_KEY }}
        #   RUBYGEMS_API_KEY: ${{ secrets.RUBYGEMS_API_KEY }}
        # run: |
        #   cat << EOF > ~/.npmrc
        #   //registry.npmjs.org/:_authToken=${NPM_API_KEY}
        #   EOF
        #   chmod 0600 ~/.npmrc
        #
        # you can use this initial file in your homebrew-tap if you don't have an initial formula:
        # <projectname>.rb
        #
        # class <Projectname capitalized> < Formula
        #   desc "A test formula"
        #   homepage "http://www.example.com"
        #   url "-----"
        #   version "-----"
        #   sha256 "-----"

        #   def install
        #     bin.install "<bin-name>"
        #   end
        # end

      
      # Uncomment this section if you want to release your package to crates.io
      # Before publishing, make sure you have filled out the following fields:
      # license or license-file, description, homepage, documentation, repository, readme.
      # Read more: https://doc.rust-lang.org/cargo/reference/publishing.html

      # - name: Install ${{ matrix.rust }} toolchain
      #   uses: actions-rs/toolchain@v1
      #   with:
      #     profile: minimal
      #     toolchain: ${{ matrix.rust }}
      #     target: ${{ matrix.target }}
      # - run: cargo publish --token ${CRATES_TOKEN}
      #  env:
      #    CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}
